* Glossary							   :noexport:
#+name: gloss
| Term               | Plural    | Description                                                                                                                                                |
|--------------------+-----------+------------------------------------------------------------------------------------------------------------------------------------------------------------|
| argument           |           | An input to a function or method, provided at the time of calling it                                                                                       |
| callback           |           | A function that executes in response to an event in some other part of the system. If you make a GUI button, a click needs to ``call back'' into your code |
| class              | classes   | An object definition, consisting of variables (for data storage) and methods (for the object's operations)                                                 |
| control input      |           | An argument of a synthesis function. The server exposes control inputs to be set from the language client: \cd{synth.set(\textbackslash name, newValue);}  |
| curve factor       |           | A number that ``bends" a linear mapping into a curve. The larger the number, the more extreme the curve                                                    |
| default            |           | A value that will be used unless you specify another value. E.g., the default frequency for \cd{SinOsc.ar} is 440 Hz                                       |
| exponential        |           | A data range with steps defined by multiplication: an interval of $\times 1.5$ feels identical, at any level                                               |
| granular synthesis |           | A technique for generating complex sounds from short, overlapping segments of recorded audio                                                               |
| JITLib             |           | The ``Just-In-Time'' Library. A system of ``proxies'' that allow you to define a synthesis structure and fill in the details a piece at a time             |
| latency            | latencies | It takes time for mic input to reach SC, and also for SC's calculations to reach the speakers. This time is \emph{latency}                                 |
| linear             |           | A data range with steps defined by addition: an interval of $+0.1$ feels identical, at any level                                                           |
| method             |           | An action which an object can perform. Very similar to a function, but it belongs to a class and has a name                                                |
| normalized         |           | Describes a standard range associated with a physical control or on-screen display. Typically 0--1                                                         |
| object             |           | The focal point of object-oriented programming. Objects combine \emph{data} and \emph{actions} (``methods") into single entities.                          |
| OSC                |           | Open Sound Control. A communication protocol to send light, but structured, messages over a network                                                        |
| path               |           | A /-separated string, giving a location in a tree structure. File paths go through directories. OSC command paths use slashes the same way                 |
| proxy              | proxies   | A placeholder that allows you to define connections between modules independent of each module's content                                                   |
| rate               |           | Of a UGen, its calculation rate: audio rate, control rate or initial rate                                                                                  |
| scide              |           | SuperCollider Integrated Development Environment. The main code-interaction interface                                                                      |
| sclang             |           | SuperCollider language. Evaluates code and displays results                                                                                                |
| scsynth            |           | SuperCollider synthesis server. Receives OSC messages and produces audio                                                                                   |
| smoothing filter   |           | Reduces jitter in unstable signals. Common smoothing filters are \emph{moving average} and \emph{moving median}                                            |
| UGen               |           | A Unit Generator, defining a signal-processing operation that runs in the audio server                                                                     |
| variable           |           | A placeholder for an object, necessary to recall an object later and address method calls to it                                                            |


* Classes 							   :noexport:
#+name: class
| Term          | Plural      | Description                                                                                                                                                        |
|---------------+-------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Array         |             | An ordered list of items with a fixed maximum number of items. When adding, be sure to reassign: \cd{array = array.add(item)}                                      |
| ControlSpec   |             | Defines a numeric range, with low and high values, a curve, step size (for quantization) and a default value                                                       |
| MIDIdef       |             | MIDIdef is global, named storage for MIDIFuncs, just like OSCdef is global storage for OSCFuncs                                                                    |
| MIDIFunc      |             | Receives incoming MIDI messages. Its design is very much like OSCFunc; only the specific parameters differ                                                         |
| NetAddr       |             | Represents a port for network communication: an IP address (e.g. \cd{"127.0.0.1"}) and a port number                                                               |
| OSCdef        |             | Like Pdef and Tdef, OSCdef is global storage for OSCFunc responders                                                                                                |
| OSCFunc       |             | Receives Open Sound Control messages. The ``Func'' is a callback function, whose arguments are \cd{msg, time, addr, recvPort}                                      |
| Pdef          |             | Global storage for pattern proxies, where the patterns produce sequencing events                                                                                   |
| ProxySpace    |             | An Environment that automatically makes a NodeProxy from any item in it                                                                                            |
| ServerOptions |             | Configuration options for scsynth, including soundcard, are variables in this class. \cd{s.options} controls the bootup options for \ci{s}                         |
| Tdef          |             | Global storage for Tasks. Give the task function a name, and Tdef will treat the function as a Task                                                                |
| Function      |             | A code block, with local variables and arguments, that can be executed at any time by calling ``value'' on it. A function always returns exactly one result object |
| NodeProxy     | NodeProxies | A hot-swappable placeholder for a Synth on the server                                                                                                              |
| Ndef          |             | ``NodeProxy definition'': Convenient, global storage for NodeProxies                                                                                               |


* Methods							   :noexport:
#+name: mth
| Term     | Plural | Description                                                                                                                          |
|----------+--------+--------------------------------------------------------------------------------------------------------------------------------------|
| free     |        | Removes a resource that was previously allocated, including Buffers and MIDI or OSC responders                                       |
| langPort |        | \ci{NetAddr.langPort} returns the network port that SuperCollider is listening to. Use this as the outgoing port in TouchOSC or mrmr |
| ar       |        | Create an audio-rate instance of a UGen. The arguments to ``ar'' establish connections to other UGens                                |
| kr       |        | Create a control-rate instance of a UGen. The arguments to ``kr'' establish connections to other UGens                               |
| ir       |        | Create a initial-rate (one-shot) instance of a UGen. The arguments to ``ir'' establish connections to other UGens                    |
| dup      |        | ``Duplicate.'' Often used to copy a mono signal into left and right channels                                                         |
| boot     |        | The method to start a server in code (rather than through the editor interface)                                                      |
| set      |        | On a synth node or NodeProxy, set a new value for a control input: \cd{n.set(\textbackslash name, value...)}                         |


* UGens								   :noexport:
#+name: ugens
| Type | Term     | Description                                                                                                                        | Arguments               |
|------+----------+------------------------------------------------------------------------------------------------------------------------------------+-------------------------|
| Osc  | SinOsc   | Sinewave oscillator                                                                                                                | freq, phase             |
| IO   | Out      | Writes one or more channels to an audio or control bus. Many \ci{Out} units can write to the same bus; their signals will be mixed | bus, channelsArray      |
| Pan  | Balance2 | Stereo-to-stereo balancer. When \ci{pos} is --1, you hear only the left channel; when +1, only the right channel                   | left, right, pos, level |
| Pan  | Pan2     | Mono-to-stereo panner. \ci{in} must be a mono signal. \ci{pos}: Full left is --1, right is +1                                      | in, pos, level          |


* src blocks 							   :noexport:

#+name: makegloss
#+begin_src emacs-lisp :var tbl=gloss glosstype='nil :exports none :results value latex
  (let ((str "")
        (gltype (if glosstype (format "type=%s," glosstype) "")))
    ;(pop tbl)
    ;(pop tbl)
    (while tbl
      (let ((item (pop tbl)))
        (setq str
              (concat str
                      (format "\\newglossaryentry{%s}{%sname={%s},%sdescription={%s}}\n"
                              (car item)
                              gltype
                              (pop item)
                              (let ((plural (pop item)))
                                (if (string= plural "")
                                    ""
                                  (format "plural={%s}," plural)))
                              (car item))))))
    str)
#+end_src

#+name: ugengloss
#+begin_src emacs-lisp :var tbl=ugens :exports none :results value latex
(let ((str ""))
  ;(pop tbl)
  ;(pop tbl)
  (while tbl
    (let ((item (car tbl)))
      (pop item)
      (setq str (concat str (format "\\newglossaryentry{%s}{type=ugen,name={%s},description={%s. Inputs: (%s)}}\n"
  		   (car item)
  		   (pop item)
  		   (pop item)
  		   (car item))))
      (setq tbl (cdr tbl))))
  str)
#+end_src
